<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Testing - 标签 - Finger&#39;s Blog</title>
    <link>https://hellofinger.tech/tags/testing/</link>
    <description>Testing - 标签 | Finger&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>finger.zhou@gmail.com (Finger)</managingEditor>
      <webMaster>finger.zhou@gmail.com (Finger)</webMaster><lastBuildDate>Fri, 12 Jan 2024 18:42:04 &#43;0000</lastBuildDate><atom:link href="https://hellofinger.tech/tags/testing/" rel="self" type="application/rss+xml" /><item>
  <title>Testkube--创建自定义执行器</title>
  <link>https://hellofinger.tech/2024/01/testkube-custom-executor/</link>
  <pubDate>Fri, 12 Jan 2024 18:42:04 &#43;0000</pubDate>
  <author>Finger</author>
  <guid>https://hellofinger.tech/2024/01/testkube-custom-executor/</guid>
  <description><![CDATA[创建自定义执行器Testkube自定义执行器可以自己创建或者使用模板创建.
1 git clone https://github.com/exu/testkube-executor-example Testkube提供了帮助实现执行器的组件。 Runner接口是实现执行器的主要入口。
1 2 3 4 type Runner interface { // Run takes Execution data and returns execution result Run(execution testkube.Execution) (result testkube.ExecutionResult, err error) } 完整的runner.go文件
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 package runner import ( &#34;fmt&#34; &#34;io&#34; &#34;net/http&#34; &#34;github.]]></description>
</item>
<item>
  <title>Testkube--介绍</title>
  <link>https://hellofinger.tech/2024/01/testkube-intro/</link>
  <pubDate>Thu, 11 Jan 2024 07:30:04 &#43;0000</pubDate>
  <author>Finger</author>
  <guid>https://hellofinger.tech/2024/01/testkube-intro/</guid>
  <description><![CDATA[Testkube是什么？Testkube 是一个Kubernetes原生测试框架。它内置了当前主流的大多数测试工具，包括功能、性能、安全和合规性等。它可以直接在您的Kubernetes集群中运行这些测试工具。并且它很容易集成到你的CI/CD Pipeline中。另外它还提供了kubectl插件、UI和API的多种交互方式。
Testkube支持的测试工具和框架：
cURL Cypress K6 Maven Postman Gradle Pytest Prebuild Executor Container Executor &hellip; 另外，Testkube支持创建自定义测试类型，称为Testkube容器执行器。它使您能够运行自己的容器映像来执行测试。
安装Testkube使用Helm Chart安装
1 2 3 4 5 6 7 8 # Add the Kubeshop Helm repository. helm repo add kubeshop https://kubeshop.github.io/helm-charts # Install the testkube chart. helm install --create-namespace my-testkube kubeshop/testkube -n testkube 创建测试 (Tests)创建一个Curl测试1 2 Type: curl/test Source: String 1 2 3 4 5 6 7 8 9 { &#34;command&#34;: [ &#34;curl&#34;, &#34;https://&lt;your-domain&gt;&#34;, &#34;-H&#34;, &#34;&#39;Accept: application/json&#39;&#34; ], &#34;expected_status&#34;: &#34;200&#34; } 创建一个K6测试1 2 Type: k6/script Source: String 1 2 3 4 5 6 7 8 9 10 import http from &#39;k6/http&#39;; import { sleep } from &#39;k6&#39;; export const options = { vus: 10, duration: &#39;30s&#39;, }; export default function () { http.]]></description>
</item>
</channel>
</rss>
